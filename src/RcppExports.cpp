// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// logjac_IHS
double logjac_IHS(NumericMatrix dat, NumericMatrix lambda, IntegerVector cluster, int lambdaType);
RcppExport SEXP _TiKmeans_logjac_IHS(SEXP datSEXP, SEXP lambdaSEXP, SEXP clusterSEXP, SEXP lambdaTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaType(lambdaTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(logjac_IHS(dat, lambda, cluster, lambdaType));
    return rcpp_result_gen;
END_RCPP
}
// logjac_IHS1
double logjac_IHS1(double x, double lambda);
RcppExport SEXP _TiKmeans_logjac_IHS1(SEXP xSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(logjac_IHS1(x, lambda));
    return rcpp_result_gen;
END_RCPP
}
// IHS
NumericVector IHS(NumericVector col, double lambda);
RcppExport SEXP _TiKmeans_IHS(SEXP colSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type col(colSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(IHS(col, lambda));
    return rcpp_result_gen;
END_RCPP
}
// IHS1
double IHS1(double val, double lambda);
RcppExport SEXP _TiKmeans_IHS1(SEXP valSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type val(valSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(IHS1(val, lambda));
    return rcpp_result_gen;
END_RCPP
}
// IHSAll
NumericMatrix IHSAll(NumericMatrix X, NumericMatrix lambda, int lambdaType, IntegerVector cluster);
RcppExport SEXP _TiKmeans_IHSAll(SEXP XSEXP, SEXP lambdaSEXP, SEXP lambdaTypeSEXP, SEXP clusterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaType(lambdaTypeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cluster(clusterSEXP);
    rcpp_result_gen = Rcpp::wrap(IHSAll(X, lambda, lambdaType, cluster));
    return rcpp_result_gen;
END_RCPP
}
// IHS_WSS
NumericVector IHS_WSS(NumericMatrix Xihs, IntegerVector clusters, int K, NumericMatrix means);
RcppExport SEXP _TiKmeans_IHS_WSS(SEXP XihsSEXP, SEXP clustersSEXP, SEXP KSEXP, SEXP meansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xihs(XihsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusters(clustersSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type means(meansSEXP);
    rcpp_result_gen = Rcpp::wrap(IHS_WSS(Xihs, clusters, K, means));
    return rcpp_result_gen;
END_RCPP
}
// IHS_WSS_Update1
double IHS_WSS_Update1(NumericVector x, IntegerVector clusters, int K, double lambda);
RcppExport SEXP _TiKmeans_IHS_WSS_Update1(SEXP xSEXP, SEXP clustersSEXP, SEXP KSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusters(clustersSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(IHS_WSS_Update1(x, clusters, K, lambda));
    return rcpp_result_gen;
END_RCPP
}
// T_means
NumericMatrix T_means(NumericMatrix Xihs, IntegerVector clusters, int k);
RcppExport SEXP _TiKmeans_T_means(SEXP XihsSEXP, SEXP clustersSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xihs(XihsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusters(clustersSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(T_means(Xihs, clusters, k));
    return rcpp_result_gen;
END_RCPP
}
// IHS_Distance_Matrix
NumericMatrix IHS_Distance_Matrix(NumericMatrix Xihs, IntegerVector clusters, NumericMatrix means, int k, NumericMatrix lambda, NumericMatrix X, int lambdaType);
RcppExport SEXP _TiKmeans_IHS_Distance_Matrix(SEXP XihsSEXP, SEXP clustersSEXP, SEXP meansSEXP, SEXP kSEXP, SEXP lambdaSEXP, SEXP XSEXP, SEXP lambdaTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xihs(XihsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clusters(clustersSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type means(meansSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaType(lambdaTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(IHS_Distance_Matrix(Xihs, clusters, means, k, lambda, X, lambdaType));
    return rcpp_result_gen;
END_RCPP
}
// chooseLambdaMove
arma::mat chooseLambdaMove(arma::cube scores, int lambdaStepType);
RcppExport SEXP _TiKmeans_chooseLambdaMove(SEXP scoresSEXP, SEXP lambdaStepTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaStepType(lambdaStepTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(chooseLambdaMove(scores, lambdaStepType));
    return rcpp_result_gen;
END_RCPP
}
// getClosest
IntegerVector getClosest(NumericMatrix dists);
RcppExport SEXP _TiKmeans_getClosest(SEXP distsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dists(distsSEXP);
    rcpp_result_gen = Rcpp::wrap(getClosest(dists));
    return rcpp_result_gen;
END_RCPP
}
// KM_Transformed_Internal
List KM_Transformed_Internal(NumericMatrix X, int K, NumericMatrix centersR, int lambdaType, NumericVector lambdaSeq, int lambdaStepType, NumericMatrix lambdaR, int maxiter);
RcppExport SEXP _TiKmeans_KM_Transformed_Internal(SEXP XSEXP, SEXP KSEXP, SEXP centersRSEXP, SEXP lambdaTypeSEXP, SEXP lambdaSeqSEXP, SEXP lambdaStepTypeSEXP, SEXP lambdaRSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type centersR(centersRSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaType(lambdaTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambdaSeq(lambdaSeqSEXP);
    Rcpp::traits::input_parameter< int >::type lambdaStepType(lambdaStepTypeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambdaR(lambdaRSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(KM_Transformed_Internal(X, K, centersR, lambdaType, lambdaSeq, lambdaStepType, lambdaR, maxiter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TiKmeans_logjac_IHS", (DL_FUNC) &_TiKmeans_logjac_IHS, 4},
    {"_TiKmeans_logjac_IHS1", (DL_FUNC) &_TiKmeans_logjac_IHS1, 2},
    {"_TiKmeans_IHS", (DL_FUNC) &_TiKmeans_IHS, 2},
    {"_TiKmeans_IHS1", (DL_FUNC) &_TiKmeans_IHS1, 2},
    {"_TiKmeans_IHSAll", (DL_FUNC) &_TiKmeans_IHSAll, 4},
    {"_TiKmeans_IHS_WSS", (DL_FUNC) &_TiKmeans_IHS_WSS, 4},
    {"_TiKmeans_IHS_WSS_Update1", (DL_FUNC) &_TiKmeans_IHS_WSS_Update1, 4},
    {"_TiKmeans_T_means", (DL_FUNC) &_TiKmeans_T_means, 3},
    {"_TiKmeans_IHS_Distance_Matrix", (DL_FUNC) &_TiKmeans_IHS_Distance_Matrix, 7},
    {"_TiKmeans_chooseLambdaMove", (DL_FUNC) &_TiKmeans_chooseLambdaMove, 2},
    {"_TiKmeans_getClosest", (DL_FUNC) &_TiKmeans_getClosest, 1},
    {"_TiKmeans_KM_Transformed_Internal", (DL_FUNC) &_TiKmeans_KM_Transformed_Internal, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_TiKmeans(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
